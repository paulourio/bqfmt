// Code generated by gocc; DO NOT EDIT.

package lexer

import (
	"io/ioutil"
	"unicode/utf8"

	"github.com/paulourio/bqfmt/zetasql/token"
)

const (
	NoState    = -1
	NumStates  = 572
	NumSymbols = 1026
)

type Lexer struct {
	src     []byte
	pos     int
	line    int
	column  int
	Context token.Context
}

func NewLexer(src []byte) *Lexer {
	lexer := &Lexer{
		src:     src,
		pos:     0,
		line:    1,
		column:  1,
		Context: nil,
	}
	return lexer
}

// SourceContext is a simple instance of a token.Context which
// contains the name of the source file.
type SourceContext struct {
	Filepath string
}

func (s *SourceContext) Source() string {
	return s.Filepath
}

func NewLexerFile(fpath string) (*Lexer, error) {
	src, err := ioutil.ReadFile(fpath)
	if err != nil {
		return nil, err
	}
	lexer := NewLexer(src)
	lexer.Context = &SourceContext{Filepath: fpath}
	return lexer, nil
}

func (l *Lexer) Scan() (tok *token.Token) {
	tok = &token.Token{}
	if l.pos >= len(l.src) {
		tok.Type = token.EOF
		tok.Pos.Offset, tok.Pos.Line, tok.Pos.Column = l.pos, l.line, l.column
		tok.Pos.Context = l.Context
		return
	}
	start, startLine, startColumn, end := l.pos, l.line, l.column, 0
	tok.Type = token.INVALID
	state, rune1, size := 0, rune(-1), 0
	for state != -1 {
		if l.pos >= len(l.src) {
			rune1 = -1
		} else {
			rune1, size = utf8.DecodeRune(l.src[l.pos:])
			l.pos += size
		}

		nextState := -1
		if rune1 != -1 {
			nextState = TransTab[state](rune1)
		}
		state = nextState

		if state != -1 {

			switch rune1 {
			case '\n':
				l.line++
				l.column = 1
			case '\r':
				l.column = 1
			case '\t':
				l.column += 4
			default:
				l.column++
			}

			switch {
			case ActTab[state].Accept != -1:
				tok.Type = ActTab[state].Accept
				end = l.pos
			case ActTab[state].Ignore != "":
				start, startLine, startColumn = l.pos, l.line, l.column
				state = 0
				if start >= len(l.src) {
					tok.Type = token.EOF
				}

			}
		} else {
			if tok.Type == token.INVALID {
				end = l.pos
			}
		}
	}
	if end > start {
		l.pos = end
		tok.Lit = l.src[start:end]
	} else {
		tok.Lit = []byte{}
	}
	tok.Pos.Offset, tok.Pos.Line, tok.Pos.Column = start, startLine, startColumn
	tok.Pos.Context = l.Context

	return
}

func (l *Lexer) Reset() {
	l.pos = 0
}

/*
Lexer symbols:
0: '_'
1: '_'
2: '_'
3: 'f'
4: 'F'
5: 'a'
6: 'A'
7: 'l'
8: 'L'
9: 's'
10: 'S'
11: 'e'
12: 'E'
13: 't'
14: 'T'
15: 'r'
16: 'R'
17: 'u'
18: 'U'
19: 'e'
20: 'E'
21: 'a'
22: 'A'
23: 'l'
24: 'L'
25: 'l'
26: 'L'
27: 'a'
28: 'A'
29: 'n'
30: 'N'
31: 'd'
32: 'D'
33: 'a'
34: 'A'
35: 'r'
36: 'R'
37: 'r'
38: 'R'
39: 'a'
40: 'A'
41: 'y'
42: 'Y'
43: 'a'
44: 'A'
45: 's'
46: 'S'
47: 'a'
48: 'A'
49: 's'
50: 'S'
51: 'c'
52: 'C'
53: 'a'
54: 'A'
55: 't'
56: 'T'
57: 'b'
58: 'B'
59: 'e'
60: 'E'
61: 't'
62: 'T'
63: 'w'
64: 'W'
65: 'e'
66: 'E'
67: 'e'
68: 'E'
69: 'n'
70: 'N'
71: 'b'
72: 'B'
73: 'i'
74: 'I'
75: 'g'
76: 'G'
77: 'd'
78: 'D'
79: 'e'
80: 'E'
81: 'c'
82: 'C'
83: 'i'
84: 'I'
85: 'm'
86: 'M'
87: 'a'
88: 'A'
89: 'l'
90: 'L'
91: 'b'
92: 'B'
93: 'i'
94: 'I'
95: 'g'
96: 'G'
97: 'n'
98: 'N'
99: 'u'
100: 'U'
101: 'm'
102: 'M'
103: 'e'
104: 'E'
105: 'r'
106: 'R'
107: 'i'
108: 'I'
109: 'c'
110: 'C'
111: 'b'
112: 'B'
113: 'y'
114: 'Y'
115: 'c'
116: 'C'
117: 'a'
118: 'A'
119: 's'
120: 'S'
121: 'e'
122: 'E'
123: 'c'
124: 'C'
125: 'a'
126: 'A'
127: 's'
128: 'S'
129: 't'
130: 'T'
131: 'c'
132: 'C'
133: 'r'
134: 'R'
135: 'o'
136: 'O'
137: 's'
138: 'S'
139: 's'
140: 'S'
141: 'c'
142: 'C'
143: 'u'
144: 'U'
145: 'r'
146: 'R'
147: 'r'
148: 'R'
149: 'e'
150: 'E'
151: 'n'
152: 'N'
153: 't'
154: 'T'
155: 'd'
156: 'D'
157: 'a'
158: 'A'
159: 't'
160: 'T'
161: 'e'
162: 'E'
163: 'd'
164: 'D'
165: 'a'
166: 'A'
167: 't'
168: 'T'
169: 'e'
170: 'E'
171: 't'
172: 'T'
173: 'i'
174: 'I'
175: 'm'
176: 'M'
177: 'e'
178: 'E'
179: 'd'
180: 'D'
181: 'e'
182: 'E'
183: 'c'
184: 'C'
185: 'i'
186: 'I'
187: 'm'
188: 'M'
189: 'a'
190: 'A'
191: 'l'
192: 'L'
193: 'd'
194: 'D'
195: 'e'
196: 'E'
197: 's'
198: 'S'
199: 'c'
200: 'C'
201: 'd'
202: 'D'
203: 'i'
204: 'I'
205: 's'
206: 'S'
207: 't'
208: 'T'
209: 'i'
210: 'I'
211: 'n'
212: 'N'
213: 'c'
214: 'C'
215: 't'
216: 'T'
217: 'e'
218: 'E'
219: 'l'
220: 'L'
221: 's'
222: 'S'
223: 'e'
224: 'E'
225: 'e'
226: 'E'
227: 'n'
228: 'N'
229: 'd'
230: 'D'
231: 'e'
232: 'E'
233: 'x'
234: 'X'
235: 'c'
236: 'C'
237: 'e'
238: 'E'
239: 'p'
240: 'P'
241: 't'
242: 'T'
243: 'e'
244: 'E'
245: 'x'
246: 'X'
247: 't'
248: 'T'
249: 'r'
250: 'R'
251: 'a'
252: 'A'
253: 'c'
254: 'C'
255: 't'
256: 'T'
257: 'f'
258: 'F'
259: 'i'
260: 'I'
261: 'r'
262: 'R'
263: 's'
264: 'S'
265: 't'
266: 'T'
267: 'f'
268: 'F'
269: 'o'
270: 'O'
271: 'l'
272: 'L'
273: 'l'
274: 'L'
275: 'o'
276: 'O'
277: 'w'
278: 'W'
279: 'i'
280: 'I'
281: 'n'
282: 'N'
283: 'g'
284: 'G'
285: 'f'
286: 'F'
287: 'o'
288: 'O'
289: 'r'
290: 'R'
291: 'm'
292: 'M'
293: 'a'
294: 'A'
295: 't'
296: 'T'
297: 'f'
298: 'F'
299: 'r'
300: 'R'
301: 'o'
302: 'O'
303: 'm'
304: 'M'
305: 'f'
306: 'F'
307: 'u'
308: 'U'
309: 'l'
310: 'L'
311: 'l'
312: 'L'
313: 'g'
314: 'G'
315: 'r'
316: 'R'
317: 'o'
318: 'O'
319: 'u'
320: 'U'
321: 'p'
322: 'P'
323: 'h'
324: 'H'
325: 'a'
326: 'A'
327: 'v'
328: 'V'
329: 'i'
330: 'I'
331: 'n'
332: 'N'
333: 'g'
334: 'G'
335: 'i'
336: 'I'
337: 'g'
338: 'G'
339: 'n'
340: 'N'
341: 'o'
342: 'O'
343: 'r'
344: 'R'
345: 'e'
346: 'E'
347: 'i'
348: 'I'
349: 'n'
350: 'N'
351: 'i'
352: 'I'
353: 'n'
354: 'N'
355: 'n'
356: 'N'
357: 'e'
358: 'E'
359: 'r'
360: 'R'
361: 'i'
362: 'I'
363: 'n'
364: 'N'
365: 't'
366: 'T'
367: 'e'
368: 'E'
369: 'r'
370: 'R'
371: 's'
372: 'S'
373: 'e'
374: 'E'
375: 'c'
376: 'C'
377: 't'
378: 'T'
379: 'i'
380: 'I'
381: 'n'
382: 'N'
383: 't'
384: 'T'
385: 'e'
386: 'E'
387: 'r'
388: 'R'
389: 'v'
390: 'V'
391: 'a'
392: 'A'
393: 'l'
394: 'L'
395: 'i'
396: 'I'
397: 's'
398: 'S'
399: 'j'
400: 'J'
401: 'o'
402: 'O'
403: 'i'
404: 'I'
405: 'n'
406: 'N'
407: 'j'
408: 'J'
409: 's'
410: 'S'
411: 'o'
412: 'O'
413: 'n'
414: 'N'
415: 'l'
416: 'L'
417: 'a'
418: 'A'
419: 's'
420: 'S'
421: 't'
422: 'T'
423: 'l'
424: 'L'
425: 'e'
426: 'E'
427: 'f'
428: 'F'
429: 't'
430: 'T'
431: 'l'
432: 'L'
433: 'i'
434: 'I'
435: 'k'
436: 'K'
437: 'e'
438: 'E'
439: 'l'
440: 'L'
441: 'i'
442: 'I'
443: 'm'
444: 'M'
445: 'i'
446: 'I'
447: 't'
448: 'T'
449: 'n'
450: 'N'
451: 'o'
452: 'O'
453: 't'
454: 'T'
455: 'n'
456: 'N'
457: 'u'
458: 'U'
459: 'l'
460: 'L'
461: 'l'
462: 'L'
463: 'n'
464: 'N'
465: 'u'
466: 'U'
467: 'l'
468: 'L'
469: 'l'
470: 'L'
471: 's'
472: 'S'
473: 'n'
474: 'N'
475: 'u'
476: 'U'
477: 'm'
478: 'M'
479: 'e'
480: 'E'
481: 'r'
482: 'R'
483: 'i'
484: 'I'
485: 'c'
486: 'C'
487: 'o'
488: 'O'
489: 'f'
490: 'F'
491: 'f'
492: 'F'
493: 's'
494: 'S'
495: 'e'
496: 'E'
497: 't'
498: 'T'
499: 'o'
500: 'O'
501: 'n'
502: 'N'
503: 'o'
504: 'O'
505: 'r'
506: 'R'
507: 'o'
508: 'O'
509: 'r'
510: 'R'
511: 'd'
512: 'D'
513: 'e'
514: 'E'
515: 'r'
516: 'R'
517: 'o'
518: 'O'
519: 'u'
520: 'U'
521: 't'
522: 'T'
523: 'e'
524: 'E'
525: 'r'
526: 'R'
527: 'o'
528: 'O'
529: 'v'
530: 'V'
531: 'e'
532: 'E'
533: 'r'
534: 'R'
535: 'p'
536: 'P'
537: 'a'
538: 'A'
539: 'r'
540: 'R'
541: 't'
542: 'T'
543: 'i'
544: 'I'
545: 't'
546: 'T'
547: 'i'
548: 'I'
549: 'o'
550: 'O'
551: 'n'
552: 'N'
553: 'p'
554: 'P'
555: 'e'
556: 'E'
557: 'r'
558: 'R'
559: 'c'
560: 'C'
561: 'e'
562: 'E'
563: 'n'
564: 'N'
565: 't'
566: 'T'
567: 'p'
568: 'P'
569: 'r'
570: 'R'
571: 'e'
572: 'E'
573: 'c'
574: 'C'
575: 'e'
576: 'E'
577: 'd'
578: 'D'
579: 'i'
580: 'I'
581: 'n'
582: 'N'
583: 'g'
584: 'G'
585: 'p'
586: 'P'
587: 'r'
588: 'R'
589: 'o'
590: 'O'
591: 't'
592: 'T'
593: 'o'
594: 'O'
595: 'q'
596: 'Q'
597: 'u'
598: 'U'
599: 'a'
600: 'A'
601: 'l'
602: 'L'
603: 'i'
604: 'I'
605: 'f'
606: 'F'
607: 'y'
608: 'Y'
609: 'r'
610: 'R'
611: 'a'
612: 'A'
613: 'n'
614: 'N'
615: 'g'
616: 'G'
617: 'e'
618: 'E'
619: 'r'
620: 'R'
621: 'e'
622: 'E'
623: 'p'
624: 'P'
625: 'e'
626: 'E'
627: 'a'
628: 'A'
629: 't'
630: 'T'
631: 'a'
632: 'A'
633: 'b'
634: 'B'
635: 'l'
636: 'L'
637: 'e'
638: 'E'
639: 'r'
640: 'R'
641: 'e'
642: 'E'
643: 'p'
644: 'P'
645: 'l'
646: 'L'
647: 'a'
648: 'A'
649: 'c'
650: 'C'
651: 'e'
652: 'E'
653: 'r'
654: 'R'
655: 'e'
656: 'E'
657: 's'
658: 'S'
659: 'p'
660: 'P'
661: 'e'
662: 'E'
663: 'c'
664: 'C'
665: 't'
666: 'T'
667: 'r'
668: 'R'
669: 'i'
670: 'I'
671: 'g'
672: 'G'
673: 'h'
674: 'H'
675: 't'
676: 'T'
677: 'r'
678: 'R'
679: 'o'
680: 'O'
681: 'l'
682: 'L'
683: 'l'
684: 'L'
685: 'u'
686: 'U'
687: 'p'
688: 'P'
689: 'r'
690: 'R'
691: 'o'
692: 'O'
693: 'w'
694: 'W'
695: 'r'
696: 'R'
697: 'o'
698: 'O'
699: 'w'
700: 'W'
701: 's'
702: 'S'
703: 's'
704: 'S'
705: 'a'
706: 'A'
707: 'f'
708: 'F'
709: 'e'
710: 'E'
711: '_'
712: 'c'
713: 'C'
714: 'a'
715: 'A'
716: 's'
717: 'S'
718: 't'
719: 'T'
720: 's'
721: 'S'
722: 'e'
723: 'E'
724: 'l'
725: 'L'
726: 'e'
727: 'E'
728: 'c'
729: 'C'
730: 't'
731: 'T'
732: 's'
733: 'S'
734: 't'
735: 'T'
736: 'r'
737: 'R'
738: 'u'
739: 'U'
740: 'c'
741: 'C'
742: 't'
743: 'T'
744: 't'
745: 'T'
746: 'a'
747: 'A'
748: 'b'
749: 'B'
750: 'l'
751: 'L'
752: 'e'
753: 'E'
754: 's'
755: 'S'
756: 'a'
757: 'A'
758: 'm'
759: 'M'
760: 'p'
761: 'P'
762: 'l'
763: 'L'
764: 'e'
765: 'E'
766: 't'
767: 'T'
768: 'h'
769: 'H'
770: 'e'
771: 'E'
772: 'n'
773: 'N'
774: 't'
775: 'T'
776: 'i'
777: 'I'
778: 'm'
779: 'M'
780: 'e'
781: 'E'
782: 't'
783: 'T'
784: 'i'
785: 'I'
786: 'm'
787: 'M'
788: 'e'
789: 'E'
790: 's'
791: 'S'
792: 't'
793: 'T'
794: 'a'
795: 'A'
796: 'm'
797: 'M'
798: 'p'
799: 'P'
800: 't'
801: 'T'
802: 'o'
803: 'O'
804: 'u'
805: 'U'
806: 'n'
807: 'N'
808: 'b'
809: 'B'
810: 'o'
811: 'O'
812: 'u'
813: 'U'
814: 'n'
815: 'N'
816: 'd'
817: 'D'
818: 'e'
819: 'E'
820: 'd'
821: 'D'
822: 'u'
823: 'U'
824: 'n'
825: 'N'
826: 'i'
827: 'I'
828: 'o'
829: 'O'
830: 'n'
831: 'N'
832: 'u'
833: 'U'
834: 'n'
835: 'N'
836: 'n'
837: 'N'
838: 'e'
839: 'E'
840: 's'
841: 'S'
842: 't'
843: 'T'
844: 'u'
845: 'U'
846: 's'
847: 'S'
848: 'i'
849: 'I'
850: 'n'
851: 'N'
852: 'g'
853: 'G'
854: 'w'
855: 'W'
856: 'e'
857: 'E'
858: 'i'
859: 'I'
860: 'g'
861: 'G'
862: 'h'
863: 'H'
864: 't'
865: 'T'
866: 'w'
867: 'W'
868: 'h'
869: 'H'
870: 'e'
871: 'E'
872: 'n'
873: 'N'
874: 'w'
875: 'W'
876: 'h'
877: 'H'
878: 'e'
879: 'E'
880: 'r'
881: 'R'
882: 'e'
883: 'E'
884: 'w'
885: 'W'
886: 'i'
887: 'I'
888: 'n'
889: 'N'
890: 'd'
891: 'D'
892: 'o'
893: 'O'
894: 'w'
895: 'W'
896: 'w'
897: 'W'
898: 'i'
899: 'I'
900: 't'
901: 'T'
902: 'h'
903: 'H'
904: 'z'
905: 'Z'
906: 'o'
907: 'O'
908: 'n'
909: 'N'
910: 'e'
911: 'E'
912: '-'
913: '-'
914: '\n'
915: '#'
916: '\n'
917: ';'
918: '('
919: ')'
920: ','
921: '.'
922: '*'
923: '*'
924: '<'
925: '>'
926: '|'
927: '^'
928: '&'
929: '['
930: ']'
931: '.'
932: '+'
933: '-'
934: '~'
935: '/'
936: '|'
937: '|'
938: '<'
939: '<'
940: '>'
941: '>'
942: '@'
943: '='
944: '!'
945: '='
946: '<'
947: '>'
948: '<'
949: '='
950: '>'
951: '='
952: '\'
953: '"'
954: '''
955: '\'
956: '\n'
957: '\r'
958: 'r'
959: 'R'
960: 'r'
961: 'R'
962: 'b'
963: 'B'
964: 'b'
965: 'B'
966: 'r'
967: 'R'
968: 'b'
969: 'B'
970: '"'
971: '''
972: '\n'
973: '\n'
974: '''
975: '"'
976: '.'
977: '.'
978: 'e'
979: 'E'
980: '+'
981: '-'
982: '0'
983: 'x'
984: 'X'
985: '*'
986: '*'
987: '/'
988: '/'
989: '*'
990: '*'
991: '_'
992: '`'
993: ' '
994: '\t'
995: '\n'
996: '\r'
997: \u00a0
998: 'a'-'z'
999: 'A'-'Z'
1000: 'g'-'z'
1001: 'G'-'Z'
1002: 'a'-'z'
1003: 'A'-'Z'
1004: \u0001-'\t'
1005: '\v'-'!'
1006: '#'-'&'
1007: '('-'['
1008: ']'-\u007f
1009: \u0080-\ufffc
1010: \ufffe-\U0010ffff
1011: '0'-'9'
1012: 'a'-'f'
1013: 'A'-'F'
1014: \u0001-'\t'
1015: '\v'-\u007f
1016: \u0080-\ufffc
1017: \ufffe-\U0010ffff
1018: '0'-'9'
1019: 'a'-'z'
1020: 'A'-'Z'
1021: \u0001-'\t'
1022: '\v'-'['
1023: ']'-'_'
1024: 'a'-\u007f
1025: .
*/
