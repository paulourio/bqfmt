// Code generated by gocc; DO NOT EDIT.

package lexer

import (
	"io/ioutil"
	"unicode/utf8"

	"github.com/paulourio/bqfmt/zetasql/token"
)

const (
	NoState    = -1
	NumStates  = 576
	NumSymbols = 1038
)

type Lexer struct {
	src     []byte
	pos     int
	line    int
	column  int
	Context token.Context
}

func NewLexer(src []byte) *Lexer {
	lexer := &Lexer{
		src:     src,
		pos:     0,
		line:    1,
		column:  1,
		Context: nil,
	}
	return lexer
}

// SourceContext is a simple instance of a token.Context which
// contains the name of the source file.
type SourceContext struct {
	Filepath string
}

func (s *SourceContext) Source() string {
	return s.Filepath
}

func NewLexerFile(fpath string) (*Lexer, error) {
	src, err := ioutil.ReadFile(fpath)
	if err != nil {
		return nil, err
	}
	lexer := NewLexer(src)
	lexer.Context = &SourceContext{Filepath: fpath}
	return lexer, nil
}

func (l *Lexer) Scan() (tok *token.Token) {
	tok = &token.Token{}
	if l.pos >= len(l.src) {
		tok.Type = token.EOF
		tok.Pos.Offset, tok.Pos.Line, tok.Pos.Column = l.pos, l.line, l.column
		tok.Pos.Context = l.Context
		return
	}
	start, startLine, startColumn, end := l.pos, l.line, l.column, 0
	tok.Type = token.INVALID
	state, rune1, size := 0, rune(-1), 0
	for state != -1 {
		if l.pos >= len(l.src) {
			rune1 = -1
		} else {
			rune1, size = utf8.DecodeRune(l.src[l.pos:])
			l.pos += size
		}

		nextState := -1
		if rune1 != -1 {
			nextState = TransTab[state](rune1)
		}
		state = nextState

		if state != -1 {

			switch rune1 {
			case '\n':
				l.line++
				l.column = 1
			case '\r':
				l.column = 1
			case '\t':
				l.column += 4
			default:
				l.column++
			}

			switch {
			case ActTab[state].Accept != -1:
				tok.Type = ActTab[state].Accept
				end = l.pos
			case ActTab[state].Ignore != "":
				start, startLine, startColumn = l.pos, l.line, l.column
				state = 0
				if start >= len(l.src) {
					tok.Type = token.EOF
				}

			}
		} else {
			if tok.Type == token.INVALID {
				end = l.pos
			}
		}
	}
	if end > start {
		l.pos = end
		tok.Lit = l.src[start:end]
	} else {
		tok.Lit = []byte{}
	}
	tok.Pos.Offset, tok.Pos.Line, tok.Pos.Column = start, startLine, startColumn
	tok.Pos.Context = l.Context

	return
}

func (l *Lexer) Reset() {
	l.pos = 0
}

/*
Lexer symbols:
0: '_'
1: '_'
2: '_'
3: 'f'
4: 'F'
5: 'a'
6: 'A'
7: 'l'
8: 'L'
9: 's'
10: 'S'
11: 'e'
12: 'E'
13: 't'
14: 'T'
15: 'r'
16: 'R'
17: 'u'
18: 'U'
19: 'e'
20: 'E'
21: 'a'
22: 'A'
23: 'l'
24: 'L'
25: 'l'
26: 'L'
27: 'a'
28: 'A'
29: 'n'
30: 'N'
31: 'd'
32: 'D'
33: 'a'
34: 'A'
35: 'r'
36: 'R'
37: 'r'
38: 'R'
39: 'a'
40: 'A'
41: 'y'
42: 'Y'
43: 'a'
44: 'A'
45: 's'
46: 'S'
47: 'a'
48: 'A'
49: 's'
50: 'S'
51: 'c'
52: 'C'
53: 'a'
54: 'A'
55: 't'
56: 'T'
57: 'b'
58: 'B'
59: 'e'
60: 'E'
61: 't'
62: 'T'
63: 'w'
64: 'W'
65: 'e'
66: 'E'
67: 'e'
68: 'E'
69: 'n'
70: 'N'
71: 'b'
72: 'B'
73: 'i'
74: 'I'
75: 'g'
76: 'G'
77: 'd'
78: 'D'
79: 'e'
80: 'E'
81: 'c'
82: 'C'
83: 'i'
84: 'I'
85: 'm'
86: 'M'
87: 'a'
88: 'A'
89: 'l'
90: 'L'
91: 'b'
92: 'B'
93: 'i'
94: 'I'
95: 'g'
96: 'G'
97: 'n'
98: 'N'
99: 'u'
100: 'U'
101: 'm'
102: 'M'
103: 'e'
104: 'E'
105: 'r'
106: 'R'
107: 'i'
108: 'I'
109: 'c'
110: 'C'
111: 'b'
112: 'B'
113: 'y'
114: 'Y'
115: 'c'
116: 'C'
117: 'a'
118: 'A'
119: 's'
120: 'S'
121: 'e'
122: 'E'
123: 'c'
124: 'C'
125: 'a'
126: 'A'
127: 's'
128: 'S'
129: 't'
130: 'T'
131: 'c'
132: 'C'
133: 'r'
134: 'R'
135: 'o'
136: 'O'
137: 's'
138: 'S'
139: 's'
140: 'S'
141: 'c'
142: 'C'
143: 'u'
144: 'U'
145: 'r'
146: 'R'
147: 'r'
148: 'R'
149: 'e'
150: 'E'
151: 'n'
152: 'N'
153: 't'
154: 'T'
155: 'd'
156: 'D'
157: 'a'
158: 'A'
159: 't'
160: 'T'
161: 'e'
162: 'E'
163: 'd'
164: 'D'
165: 'a'
166: 'A'
167: 't'
168: 'T'
169: 'e'
170: 'E'
171: 't'
172: 'T'
173: 'i'
174: 'I'
175: 'm'
176: 'M'
177: 'e'
178: 'E'
179: 'd'
180: 'D'
181: 'e'
182: 'E'
183: 'c'
184: 'C'
185: 'i'
186: 'I'
187: 'm'
188: 'M'
189: 'a'
190: 'A'
191: 'l'
192: 'L'
193: 'd'
194: 'D'
195: 'e'
196: 'E'
197: 's'
198: 'S'
199: 'c'
200: 'C'
201: 'd'
202: 'D'
203: 'i'
204: 'I'
205: 's'
206: 'S'
207: 't'
208: 'T'
209: 'i'
210: 'I'
211: 'n'
212: 'N'
213: 'c'
214: 'C'
215: 't'
216: 'T'
217: 'e'
218: 'E'
219: 'l'
220: 'L'
221: 's'
222: 'S'
223: 'e'
224: 'E'
225: 'e'
226: 'E'
227: 'n'
228: 'N'
229: 'd'
230: 'D'
231: 'e'
232: 'E'
233: 'x'
234: 'X'
235: 'c'
236: 'C'
237: 'e'
238: 'E'
239: 'p'
240: 'P'
241: 't'
242: 'T'
243: 'e'
244: 'E'
245: 'x'
246: 'X'
247: 't'
248: 'T'
249: 'r'
250: 'R'
251: 'a'
252: 'A'
253: 'c'
254: 'C'
255: 't'
256: 'T'
257: 'e'
258: 'E'
259: 'x'
260: 'X'
261: 'i'
262: 'I'
263: 's'
264: 'S'
265: 't'
266: 'T'
267: 's'
268: 'S'
269: 'f'
270: 'F'
271: 'i'
272: 'I'
273: 'r'
274: 'R'
275: 's'
276: 'S'
277: 't'
278: 'T'
279: 'f'
280: 'F'
281: 'o'
282: 'O'
283: 'l'
284: 'L'
285: 'l'
286: 'L'
287: 'o'
288: 'O'
289: 'w'
290: 'W'
291: 'i'
292: 'I'
293: 'n'
294: 'N'
295: 'g'
296: 'G'
297: 'f'
298: 'F'
299: 'o'
300: 'O'
301: 'r'
302: 'R'
303: 'm'
304: 'M'
305: 'a'
306: 'A'
307: 't'
308: 'T'
309: 'f'
310: 'F'
311: 'r'
312: 'R'
313: 'o'
314: 'O'
315: 'm'
316: 'M'
317: 'f'
318: 'F'
319: 'u'
320: 'U'
321: 'l'
322: 'L'
323: 'l'
324: 'L'
325: 'g'
326: 'G'
327: 'r'
328: 'R'
329: 'o'
330: 'O'
331: 'u'
332: 'U'
333: 'p'
334: 'P'
335: 'h'
336: 'H'
337: 'a'
338: 'A'
339: 'v'
340: 'V'
341: 'i'
342: 'I'
343: 'n'
344: 'N'
345: 'g'
346: 'G'
347: 'i'
348: 'I'
349: 'g'
350: 'G'
351: 'n'
352: 'N'
353: 'o'
354: 'O'
355: 'r'
356: 'R'
357: 'e'
358: 'E'
359: 'i'
360: 'I'
361: 'n'
362: 'N'
363: 'i'
364: 'I'
365: 'n'
366: 'N'
367: 'n'
368: 'N'
369: 'e'
370: 'E'
371: 'r'
372: 'R'
373: 'i'
374: 'I'
375: 'n'
376: 'N'
377: 't'
378: 'T'
379: 'e'
380: 'E'
381: 'r'
382: 'R'
383: 's'
384: 'S'
385: 'e'
386: 'E'
387: 'c'
388: 'C'
389: 't'
390: 'T'
391: 'i'
392: 'I'
393: 'n'
394: 'N'
395: 't'
396: 'T'
397: 'e'
398: 'E'
399: 'r'
400: 'R'
401: 'v'
402: 'V'
403: 'a'
404: 'A'
405: 'l'
406: 'L'
407: 'i'
408: 'I'
409: 's'
410: 'S'
411: 'j'
412: 'J'
413: 'o'
414: 'O'
415: 'i'
416: 'I'
417: 'n'
418: 'N'
419: 'j'
420: 'J'
421: 's'
422: 'S'
423: 'o'
424: 'O'
425: 'n'
426: 'N'
427: 'l'
428: 'L'
429: 'a'
430: 'A'
431: 's'
432: 'S'
433: 't'
434: 'T'
435: 'l'
436: 'L'
437: 'e'
438: 'E'
439: 'f'
440: 'F'
441: 't'
442: 'T'
443: 'l'
444: 'L'
445: 'i'
446: 'I'
447: 'k'
448: 'K'
449: 'e'
450: 'E'
451: 'l'
452: 'L'
453: 'i'
454: 'I'
455: 'm'
456: 'M'
457: 'i'
458: 'I'
459: 't'
460: 'T'
461: 'n'
462: 'N'
463: 'o'
464: 'O'
465: 't'
466: 'T'
467: 'n'
468: 'N'
469: 'u'
470: 'U'
471: 'l'
472: 'L'
473: 'l'
474: 'L'
475: 'n'
476: 'N'
477: 'u'
478: 'U'
479: 'l'
480: 'L'
481: 'l'
482: 'L'
483: 's'
484: 'S'
485: 'n'
486: 'N'
487: 'u'
488: 'U'
489: 'm'
490: 'M'
491: 'e'
492: 'E'
493: 'r'
494: 'R'
495: 'i'
496: 'I'
497: 'c'
498: 'C'
499: 'o'
500: 'O'
501: 'f'
502: 'F'
503: 'f'
504: 'F'
505: 's'
506: 'S'
507: 'e'
508: 'E'
509: 't'
510: 'T'
511: 'o'
512: 'O'
513: 'n'
514: 'N'
515: 'o'
516: 'O'
517: 'r'
518: 'R'
519: 'o'
520: 'O'
521: 'r'
522: 'R'
523: 'd'
524: 'D'
525: 'e'
526: 'E'
527: 'r'
528: 'R'
529: 'o'
530: 'O'
531: 'u'
532: 'U'
533: 't'
534: 'T'
535: 'e'
536: 'E'
537: 'r'
538: 'R'
539: 'o'
540: 'O'
541: 'v'
542: 'V'
543: 'e'
544: 'E'
545: 'r'
546: 'R'
547: 'p'
548: 'P'
549: 'a'
550: 'A'
551: 'r'
552: 'R'
553: 't'
554: 'T'
555: 'i'
556: 'I'
557: 't'
558: 'T'
559: 'i'
560: 'I'
561: 'o'
562: 'O'
563: 'n'
564: 'N'
565: 'p'
566: 'P'
567: 'e'
568: 'E'
569: 'r'
570: 'R'
571: 'c'
572: 'C'
573: 'e'
574: 'E'
575: 'n'
576: 'N'
577: 't'
578: 'T'
579: 'p'
580: 'P'
581: 'r'
582: 'R'
583: 'e'
584: 'E'
585: 'c'
586: 'C'
587: 'e'
588: 'E'
589: 'd'
590: 'D'
591: 'i'
592: 'I'
593: 'n'
594: 'N'
595: 'g'
596: 'G'
597: 'p'
598: 'P'
599: 'r'
600: 'R'
601: 'o'
602: 'O'
603: 't'
604: 'T'
605: 'o'
606: 'O'
607: 'q'
608: 'Q'
609: 'u'
610: 'U'
611: 'a'
612: 'A'
613: 'l'
614: 'L'
615: 'i'
616: 'I'
617: 'f'
618: 'F'
619: 'y'
620: 'Y'
621: 'r'
622: 'R'
623: 'a'
624: 'A'
625: 'n'
626: 'N'
627: 'g'
628: 'G'
629: 'e'
630: 'E'
631: 'r'
632: 'R'
633: 'e'
634: 'E'
635: 'p'
636: 'P'
637: 'e'
638: 'E'
639: 'a'
640: 'A'
641: 't'
642: 'T'
643: 'a'
644: 'A'
645: 'b'
646: 'B'
647: 'l'
648: 'L'
649: 'e'
650: 'E'
651: 'r'
652: 'R'
653: 'e'
654: 'E'
655: 'p'
656: 'P'
657: 'l'
658: 'L'
659: 'a'
660: 'A'
661: 'c'
662: 'C'
663: 'e'
664: 'E'
665: 'r'
666: 'R'
667: 'e'
668: 'E'
669: 's'
670: 'S'
671: 'p'
672: 'P'
673: 'e'
674: 'E'
675: 'c'
676: 'C'
677: 't'
678: 'T'
679: 'r'
680: 'R'
681: 'i'
682: 'I'
683: 'g'
684: 'G'
685: 'h'
686: 'H'
687: 't'
688: 'T'
689: 'r'
690: 'R'
691: 'o'
692: 'O'
693: 'l'
694: 'L'
695: 'l'
696: 'L'
697: 'u'
698: 'U'
699: 'p'
700: 'P'
701: 'r'
702: 'R'
703: 'o'
704: 'O'
705: 'w'
706: 'W'
707: 'r'
708: 'R'
709: 'o'
710: 'O'
711: 'w'
712: 'W'
713: 's'
714: 'S'
715: 's'
716: 'S'
717: 'a'
718: 'A'
719: 'f'
720: 'F'
721: 'e'
722: 'E'
723: '_'
724: 'c'
725: 'C'
726: 'a'
727: 'A'
728: 's'
729: 'S'
730: 't'
731: 'T'
732: 's'
733: 'S'
734: 'e'
735: 'E'
736: 'l'
737: 'L'
738: 'e'
739: 'E'
740: 'c'
741: 'C'
742: 't'
743: 'T'
744: 's'
745: 'S'
746: 't'
747: 'T'
748: 'r'
749: 'R'
750: 'u'
751: 'U'
752: 'c'
753: 'C'
754: 't'
755: 'T'
756: 't'
757: 'T'
758: 'a'
759: 'A'
760: 'b'
761: 'B'
762: 'l'
763: 'L'
764: 'e'
765: 'E'
766: 's'
767: 'S'
768: 'a'
769: 'A'
770: 'm'
771: 'M'
772: 'p'
773: 'P'
774: 'l'
775: 'L'
776: 'e'
777: 'E'
778: 't'
779: 'T'
780: 'h'
781: 'H'
782: 'e'
783: 'E'
784: 'n'
785: 'N'
786: 't'
787: 'T'
788: 'i'
789: 'I'
790: 'm'
791: 'M'
792: 'e'
793: 'E'
794: 't'
795: 'T'
796: 'i'
797: 'I'
798: 'm'
799: 'M'
800: 'e'
801: 'E'
802: 's'
803: 'S'
804: 't'
805: 'T'
806: 'a'
807: 'A'
808: 'm'
809: 'M'
810: 'p'
811: 'P'
812: 't'
813: 'T'
814: 'o'
815: 'O'
816: 'u'
817: 'U'
818: 'n'
819: 'N'
820: 'b'
821: 'B'
822: 'o'
823: 'O'
824: 'u'
825: 'U'
826: 'n'
827: 'N'
828: 'd'
829: 'D'
830: 'e'
831: 'E'
832: 'd'
833: 'D'
834: 'u'
835: 'U'
836: 'n'
837: 'N'
838: 'i'
839: 'I'
840: 'o'
841: 'O'
842: 'n'
843: 'N'
844: 'u'
845: 'U'
846: 'n'
847: 'N'
848: 'n'
849: 'N'
850: 'e'
851: 'E'
852: 's'
853: 'S'
854: 't'
855: 'T'
856: 'u'
857: 'U'
858: 's'
859: 'S'
860: 'i'
861: 'I'
862: 'n'
863: 'N'
864: 'g'
865: 'G'
866: 'w'
867: 'W'
868: 'e'
869: 'E'
870: 'i'
871: 'I'
872: 'g'
873: 'G'
874: 'h'
875: 'H'
876: 't'
877: 'T'
878: 'w'
879: 'W'
880: 'h'
881: 'H'
882: 'e'
883: 'E'
884: 'n'
885: 'N'
886: 'w'
887: 'W'
888: 'h'
889: 'H'
890: 'e'
891: 'E'
892: 'r'
893: 'R'
894: 'e'
895: 'E'
896: 'w'
897: 'W'
898: 'i'
899: 'I'
900: 'n'
901: 'N'
902: 'd'
903: 'D'
904: 'o'
905: 'O'
906: 'w'
907: 'W'
908: 'w'
909: 'W'
910: 'i'
911: 'I'
912: 't'
913: 'T'
914: 'h'
915: 'H'
916: 'z'
917: 'Z'
918: 'o'
919: 'O'
920: 'n'
921: 'N'
922: 'e'
923: 'E'
924: '-'
925: '-'
926: '\n'
927: '#'
928: '\n'
929: ';'
930: '('
931: ')'
932: ','
933: '.'
934: '*'
935: '*'
936: '<'
937: '>'
938: '|'
939: '^'
940: '&'
941: '['
942: ']'
943: '.'
944: '+'
945: '-'
946: '~'
947: '/'
948: '|'
949: '|'
950: '<'
951: '<'
952: '>'
953: '>'
954: '@'
955: '='
956: '!'
957: '='
958: '<'
959: '>'
960: '<'
961: '='
962: '>'
963: '='
964: '\'
965: '"'
966: '''
967: '\'
968: '\n'
969: '\r'
970: 'r'
971: 'R'
972: 'r'
973: 'R'
974: 'b'
975: 'B'
976: 'b'
977: 'B'
978: 'r'
979: 'R'
980: 'b'
981: 'B'
982: '"'
983: '''
984: '\n'
985: '\n'
986: '''
987: '"'
988: '.'
989: '.'
990: 'e'
991: 'E'
992: '+'
993: '-'
994: '0'
995: 'x'
996: 'X'
997: '*'
998: '*'
999: '/'
1000: '/'
1001: '*'
1002: '*'
1003: '_'
1004: '`'
1005: ' '
1006: '\t'
1007: '\n'
1008: '\r'
1009: \u00a0
1010: 'a'-'z'
1011: 'A'-'Z'
1012: 'g'-'z'
1013: 'G'-'Z'
1014: 'a'-'z'
1015: 'A'-'Z'
1016: \u0001-'\t'
1017: '\v'-'!'
1018: '#'-'&'
1019: '('-'['
1020: ']'-\u007f
1021: \u0080-\ufffc
1022: \ufffe-\U0010ffff
1023: '0'-'9'
1024: 'a'-'f'
1025: 'A'-'F'
1026: \u0001-'\t'
1027: '\v'-\u007f
1028: \u0080-\ufffc
1029: \ufffe-\U0010ffff
1030: '0'-'9'
1031: 'a'-'z'
1032: 'A'-'Z'
1033: \u0001-'\t'
1034: '\v'-'['
1035: ']'-'_'
1036: 'a'-\u007f
1037: .
*/
